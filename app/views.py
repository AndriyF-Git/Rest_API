from flask import Flask, jsonify, request, abort
from marshmallow import Schema, fields, ValidationError
import uuid

app = Flask(__name__)

# üìö –°–∏–º—É–ª—è—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
books = []


# ‚úÖ –°—Ö–µ–º–∞ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –∫–Ω–∏–≥–∏
class BookSchema(Schema):
    id = fields.Str(dump_only=True)
    title = fields.Str(required=True)
    author = fields.Str(required=True)
    year = fields.Int(required=True)


book_schema = BookSchema()
books_schema = BookSchema(many=True)

@app.route('/')
def index():
    return "Hello"

# üü¢ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∫–Ω–∏–≥–∏
@app.route('/books', methods=['GET'])
def get_books():
    return jsonify(books_schema.dump(books)), 200


# üü¢ –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–Ω–∏–≥—É –∑–∞ ID
@app.route('/books/<string:book_id>', methods=['GET'])
def get_book(book_id):
    book = next((book for book in books if book['id'] == book_id), None)
    if not book:
        abort(404, description="–ö–Ω–∏–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    return jsonify(book_schema.dump(book)), 200


# üü¢ –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∫–Ω–∏–≥—É
@app.route('/books', methods=['POST'])
def add_book():
    try:
        data = book_schema.load(request.json)
    except ValidationError as err:
        return jsonify(err.messages), 400

    data['id'] = str(uuid.uuid4())  # –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID
    books.append(data)
    return jsonify(book_schema.dump(data)), 201


# üü¢ –í–∏–¥–∞–ª–∏—Ç–∏ –∫–Ω–∏–≥—É
@app.route('/books/<string:book_id>', methods=['DELETE'])
def delete_book(book_id):
    global books
    book = next((book for book in books if book['id'] == book_id), None)
    if not book:
        abort(404, description="–ö–Ω–∏–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

    books = [b for b in books if b['id'] != book_id]
    return jsonify({"message": "–ö–Ω–∏–≥—É –≤–∏–¥–∞–ª–µ–Ω–æ"}), 200


# üîß –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
@app.errorhandler(404)
def not_found(e):
    return jsonify(error=str(e)), 404


@app.errorhandler(400)
def bad_request(e):
    return jsonify(error=str(e)), 400


# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app.run(debug=True)
